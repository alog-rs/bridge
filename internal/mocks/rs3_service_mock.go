// Code generated by MockGen. DO NOT EDIT.
// Source: /home/eindex/go/src/github.com/alog-rs/bridge/scripts/../service/rs3.go

// Package mocks is a generated GoMock package.
package mocks

import (
	rs3 "github.com/alog-rs/proto/rs3"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIRS3Svc is a mock of IRS3Svc interface
type MockIRS3Svc struct {
	ctrl     *gomock.Controller
	recorder *MockIRS3SvcMockRecorder
}

// MockIRS3SvcMockRecorder is the mock recorder for MockIRS3Svc
type MockIRS3SvcMockRecorder struct {
	mock *MockIRS3Svc
}

// NewMockIRS3Svc creates a new mock instance
func NewMockIRS3Svc(ctrl *gomock.Controller) *MockIRS3Svc {
	mock := &MockIRS3Svc{ctrl: ctrl}
	mock.recorder = &MockIRS3SvcMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIRS3Svc) EXPECT() *MockIRS3SvcMockRecorder {
	return m.recorder
}

// GetPlayerProfile mocks base method
func (m *MockIRS3Svc) GetPlayerProfile(name string, activityCount int) (*rs3.PlayerProfile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPlayerProfile", name, activityCount)
	ret0, _ := ret[0].(*rs3.PlayerProfile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPlayerProfile indicates an expected call of GetPlayerProfile
func (mr *MockIRS3SvcMockRecorder) GetPlayerProfile(name, activityCount interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPlayerProfile", reflect.TypeOf((*MockIRS3Svc)(nil).GetPlayerProfile), name, activityCount)
}
